syntax = "proto3";

package user.user.v1;

import "google/protobuf/timestamp.proto";
import "third_party/validate/validate.proto";

option go_package = "github.com/mandacode-com/accounts-proto/user/user/v1;userv1";

service UserService {
  // Initializes the user service
  rpc InitUser(InitUserRequest) returns (InitUserResponse);

  // Deletes a user by user ID
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);

  // IsActive checks if a user is active
  rpc IsActive(IsActiveRequest) returns (IsActiveResponse);

  // IsBlocked checks if a user is blocked
  rpc IsBlocked(IsBlockedRequest) returns (IsBlockedResponse);
}

message InitUserRequest {
  string user_id = 1 [ (validate.rules).string = {uuid : true} ];
}
message InitUserResponse {
  string user_id = 1 [ (validate.rules).string = {uuid : true} ];
  google.protobuf.Timestamp initialized_at = 2; // User initialization timestamp
  string sync_code = 3
      [ (validate.rules).string = {min_len : 1} ]; // Sync code for tracking
}

message DeleteUserRequest {
  string user_id = 1 [ (validate.rules).string = {uuid : true} ];
}
message DeleteUserResponse {
  string user_id = 1 [ (validate.rules).string = {uuid : true} ];
  google.protobuf.Timestamp deleted_at = 2; // User deletion timestamp
}

message IsActiveRequest {
  string user_id = 1 [ (validate.rules).string = {uuid : true} ];
}

message IsActiveResponse {
  string user_id = 1 [ (validate.rules).string = {uuid : true} ];
  bool is_active = 2; // Indicates if the user is active
  google.protobuf.Timestamp checked_at =
      3; // Timestamp when the check was performed
}

message IsBlockedRequest {
  string user_id = 1 [ (validate.rules).string = {uuid : true} ];
}
message IsBlockedResponse {
  string user_id = 1 [ (validate.rules).string = {uuid : true} ];
  bool is_blocked = 2; // Indicates if the user is blocked
  google.protobuf.Timestamp checked_at =
      3; // Timestamp when the check was performed
}
